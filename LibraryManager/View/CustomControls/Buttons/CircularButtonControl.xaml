<UserControl x:Class="LibraryManager.View.CustomControls.CircularButtonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryManager.View.CustomControls"
             mc:Ignorable="d" 
             Name ="CircularButton" Width="50" Height="50">
    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Button Width="{Binding Diameter, ElementName=CircularButton}" Height="{Binding Diameter, ElementName=CircularButton}" Click="Button_Click">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" Width="{Binding Diameter, ElementName=CircularButton}" Height="{Binding Diameter, ElementName=CircularButton}" CornerRadius="{Binding Radius, ElementName=CircularButton}" 
                                Background="{Binding ButtonBackground, ElementName=CircularButton}" BorderBrush="{Binding ButtonBorderColor, ElementName=CircularButton}" BorderThickness="{Binding ButtonBorderThickness, ElementName=CircularButton}">
                                    <Grid>
                                        <Image Source="{Binding ImagePath, ElementName=CircularButton}" Width="{Binding ImageWidth, ElementName=CircularButton}" Height="{Binding ImageWidth, ElementName=CircularButton}" Stretch="Uniform"/>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <!-- Hover Effect -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="{Binding ButtonHoverColor, ElementName=CircularButton}"/>
                                    </Trigger>
                                    <!-- Click Effect -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="{Binding ButtonClickColor, ElementName=CircularButton}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
